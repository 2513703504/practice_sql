USE practice_sql;

DROP TABLE IF EXISTS F0406;
CREATE TABLE F0406
(
    物品     VARCHAR(10),
    购买日期 VARCHAR(20),
    单价     INT
);

INSERT INTO F0406
VALUES ('A', '2018-11-01', 100),
       ('A', '2018-10-01', 120),
       ('A', '2018-12-01', 115),
       ('B', '2018-11-01', 99),
       ('B', '2018-9-01', 88);

-- 要求：依次查询出最新单价，上一次单价，上上次单价，如果不存在则用0替代。

SELECT *, ROW_NUMBER() OVER (PARTITION BY 物品 ORDER BY CONVERT(购买日期, DATE) DESC ) RN
FROM F0406;

SELECT TMP.物品, TMP.购买日期, TMP.单价
FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY 物品 ORDER BY CONVERT(购买日期, DATE) DESC ) RN FROM F0406) AS TMP
WHERE TMP.RN <= 3;

WITH T AS (SELECT *, ROW_NUMBER() OVER (PARTITION BY 物品 ORDER BY CONVERT(购买日期, DATE) DESC ) RN FROM F0406 AS TMP)
SELECT T1.物品, T1.最新单价, IFNULL(T2.单价, 0) AS 上一次单价, IFNULL(T3.单价, 0) AS 上上一次单价
FROM (SELECT 物品, 单价 AS 最新单价 FROM T WHERE RN = 1) AS T1
         LEFT JOIN T AS T2 ON T1.物品 = T2.物品 AND T2.RN = 2
         LEFT JOIN T AS T3 ON T1.物品 = T3.物品 AND T3.RN = 3;


CREATE TABLE F0408
(
    UID           INT  NOT NULL,
    CALLBACK_DATE DATE NOT NULL
);
INSERT INTO F0408
VALUES (1, '2020-4-1');
INSERT INTO F0408
VALUES (1, '2020-4-5');
INSERT INTO F0408
VALUES (1, '2020-4-10');
INSERT INTO F0408
VALUES (1, '2020-4-19');
INSERT INTO F0408
VALUES (2, '2020-4-1');
INSERT INTO F0408
VALUES (2, '2020-4-15');
INSERT INTO F0408
VALUES (2, '2020-4-20');
INSERT INTO F0408
VALUES (2, '2020-4-16');

-- 要求：第一次召回不计费，后续如果间隔大于7天计费，否则不计费，
--       再后续距离上一次计费大于7天计费，否则不计费，以此类推

SELECT *
FROM F0408;

SELECT *,
       CASE
           WHEN LAG(CALLBACK_DATE) OVER
               (PARTITION BY UID ORDER BY CALLBACK_DATE) IS NULL
               OR
                DATEDIFF(CALLBACK_DATE,LAG(CALLBACK_DATE) OVER
                    (PARTITION BY UID ORDER BY CALLBACK_DATE)) < 7
               THEN '不计费'
           ELSE '计费' END AS CHARGE
FROM F0408
ORDER BY UID, CALLBACK_DATE
